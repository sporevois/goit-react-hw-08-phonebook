{"version":3,"file":"static/js/676.b2f212b6.chunk.js","mappings":"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","sources":["hooks/useGetEdit.jsx","redux/contacts/contactsTools.js","webpack://goit-react-hw-08-phonebook/./src/components/FormAddContact/FormAddContact.module.css?3d0a","components/FormAddContact/FormAddContact.jsx","hooks/useFilter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/UpdateForm/UpdateForm.module.css?0676","components/UpdateForm/UpdateForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { useSelector } from 'react-redux';\nimport { getEditState } from 'redux/selectors';\n\nconst useGetEdit = () => {\n  const result = useSelector(getEditState);\n  return result;\n};\n\nexport default useGetEdit;\n","export const getFilteredContacts = (contacts, filter) => {\n    if (!filter) {\n      return contacts;\n    }\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact => {\n      const normalizedName = contact.name.toLowerCase();\n      const result = normalizedName.includes(normalizedFilter);\n      return result;\n    });\n    return filteredContacts;\n};\n  \nexport const isDublicate = (name, contacts) => {\n     return contacts?.find(\n      contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n    );\n}","// extracted by mini-css-extract-plugin\nexport default {\"formTitle\":\"FormAddContact_formTitle__x825n\",\"form\":\"FormAddContact_form__IqSWD\",\"title\":\"FormAddContact_title__3XwaF\",\"field\":\"FormAddContact_field__gb4Cc\",\"btn\":\"FormAddContact_btn__P4r9R\"};","import { useState } from 'react';\nimport useGetEdit from 'hooks/useGetEdit';\nimport {\n  useAddContactMutation,\n  useFetchContactsQuery,\n} from 'redux/contacts/contactsApi';\nimport { isDublicate } from 'redux/contacts/contactsTools';\nimport { LoaderRotatingLines } from 'components/Loader/Loader';\nimport styles from '../FormAddContact/FormAddContact.module.css';\n\nconst FormAddContact = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const isEdit = useGetEdit();\n  const [addContact, { isLoading, error }] = useAddContactMutation();\n  const { data: contacts } = useFetchContactsQuery();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (isDublicate(name, contacts)) {\n      return alert(`${name} is already in contacts.`);\n    }\n    await addContact({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        return;\n    }\n  };\n\n  return (\n    <>\n      <h2 className={styles.formTitle}>Phone book</h2>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <label className={styles.title}>\n          Name\n          <input\n            className={styles.field}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            disabled={isEdit}\n            onChange={handleChange}\n          />\n        </label>\n        <label className={styles.title}>\n          Number\n          <input\n            className={styles.field}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            disabled={isEdit}\n            onChange={handleChange}\n          />\n        </label>\n        <button\n          className={styles.btn}\n          type=\"submit\"\n          disabled={isLoading || isEdit}\n        >\n          {isLoading ? (\n            <span>\n              Adding...\n              <LoaderRotatingLines />\n            </span>\n          ) : (\n            'Add contact'\n          )}\n        </button>\n        {error && <b>Request failed with Error code {error.originalStatus}</b>}\n      </form>\n    </>\n  );\n};\nexport default FormAddContact;\n","import { useSelector } from 'react-redux';\nimport { getFilter} from 'redux/selectors';\n\nconst useFilter = () => {\n  const result = useSelector(getFilter);\n  return result;\n};\n\nexport default useFilter;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Filter_title__pSkfx\",\"field\":\"Filter_field__IlYZE\"};","import { setFilter } from 'redux/filter/filterSlice';\nimport useEdit from 'hooks/useGetEdit';\nimport useFilter from 'hooks/useFilter';\nimport { useDispatch } from 'react-redux';\nimport styles from '../Filter/Filter.module.css';\n\nconst Filter = () => {\n  const filter = useFilter();\n  const isEdit = useEdit();\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { value } = event.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <label className={styles.title}>\n      Find conacts by name\n      <input\n        className={styles.field}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        disabled={isEdit}\n        onChange={handleChange}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"UpdateForm_form__6GNFv\",\"field\":\"UpdateForm_field__R0BvN\",\"wrapper\":\"UpdateForm_wrapper__ioRdd\",\"btn\":\"UpdateForm_btn__T6+tH\",\"error\":\"UpdateForm_error__IJDTN\"};","import { useState } from 'react';\nimport { setEdit } from 'redux/edit/editSlise';\nimport { useDispatch } from 'react-redux';\nimport {\n  useUpdateContactMutation,\n  useFetchContactsQuery,\n} from 'redux/contacts/contactsApi';\nimport { isDublicate } from 'redux/contacts/contactsTools';\nimport { LoaderRotatingLines } from 'components/Loader/Loader';\nimport styles from '../UpdateForm/UpdateForm.module.css';\n\nconst UpdateForm = ({ name, number, id }) => {\n  const [updateContact, { isLoading, error }] = useUpdateContactMutation();\n  const { data: contacts } = useFetchContactsQuery();\n  const [newName, setNewName] = useState(`${name}`);\n  const [newNumber, setNewNumber] = useState(`${number}`);\n  const dispatch = useDispatch();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (isDublicate(newName, contacts)) {\n      return alert(`${newName} is already in contacts.`);\n    }\n\n    const contact = {\n      id,\n      values: {\n        name: newName,\n        number: newNumber,\n      },\n    };\n\n    await updateContact(contact);\n    dispatch(setEdit(null));\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'newName':\n        return setNewName(value);\n      case 'newNumber':\n        return setNewNumber(value);\n      default:\n        return;\n    }\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <input\n        className={styles.field}\n        type=\"text\"\n        name=\"newName\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={newName}\n        onChange={handleChange}\n      />\n      <input\n        className={styles.field}\n        type=\"tel\"\n        name=\"newNumber\"\n        value={newNumber}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleChange}\n      />\n      <div className={styles.wrapper}>\n        <button\n          className={styles.btn}\n          type=\"submit\"\n          disabled={name === newName && number === newNumber}\n        >\n          {isLoading ? (\n            <span>\n              <LoaderRotatingLines />\n              Saving...\n            </span>\n          ) : (\n            'Save'\n          )}\n        </button>\n        <button\n          className={styles.btn}\n          type=\"button\"\n          onClick={() => dispatch(setEdit(null))}\n        >\n          Cancel\n        </button>\n      </div>\n      {error && <p className={styles.error}>Something gone wrong</p>}\n    </form>\n  );\n};\nexport default UpdateForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"ContactItem_btn__1h5dG\",\"item\":\"ContactItem_item__gxreB\"};","import useGetEdit from 'hooks/useGetEdit';\nimport { setEdit } from 'redux/edit/editSlise';\nimport { useDispatch } from 'react-redux';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsApi';\nimport { LoaderRotatingLines } from 'components/Loader/Loader';\nimport UpdateForm from 'components/UpdateForm/UpdateForm';\nimport styles from '../ContactItem/ContactItem.module.css';\n\nconst ContactItem = ({ name, number, id }) => {\n  const [deleteContact, { isLoading, error }] = useDeleteContactMutation();\n  const dispatch = useDispatch();\n  const isEdit = useGetEdit();\n\n  return (\n    <>\n      {error && <b>Request failed with Error code {error.originalStatus}</b>}\n      <li className={styles.item}>\n        {isEdit === id ? (\n          <UpdateForm name={name} number={number} id={id} />\n        ) : (\n          <span>\n            {name}: {number}\n          </span>\n        )}\n\n        {isEdit !== id && (\n          <span>\n            <button\n              className={styles.btn}\n              type=\"button\"\n              onClick={() => deleteContact(id)}\n              disabled={isLoading || isEdit}\n            >\n              {isLoading ? (\n                <span>\n                  Deleting...\n                  <LoaderRotatingLines />\n                </span>\n              ) : (\n                'Delete'\n              )}\n            </button>\n\n            <button\n              className={styles.btn}\n              type=\"button\"\n              onClick={() => dispatch(setEdit(id))}\n              disabled={isLoading || isEdit}\n            >\n              Edit\n            </button>\n          </span>\n        )}\n      </li>\n    </>\n  );\n};\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ContactList_title__gpugJ\"};","import useFilter from 'hooks/useFilter';\nimport { useFetchContactsQuery } from 'redux/contacts/contactsApi';\nimport { getFilteredContacts } from 'redux/contacts/contactsTools';\nimport { LoaderThreeDots } from 'components/Loader/Loader';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport styles from '../ContactList/ContactList.module.css';\n\nconst ContatList = () => {\n  const { data: contacts, isLoading, error } = useFetchContactsQuery();\n  const filter = useFilter();\n  const filteredContacts = getFilteredContacts(contacts, filter);\n\n  return (\n    <>\n      <h2 className={styles.title}>Contacts</h2>\n      {isLoading && <LoaderThreeDots />}\n      {error && <b>Request failed with Error code {error.originalStatus}</b>}\n      <ul>\n        {filteredContacts?.map(({ id, name, number }) => (\n          <ContactItem key={id} name={name} number={number} id={id} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContatList;\n","import FormAddContact from 'components/FormAddContact/FormAddContact';\nimport Filter from 'components/Filter/Filter';\nimport ContatList from 'components/ContactList/ContactList';\n\nconst Contacts = () => {\n  return (\n    <div>\n      <FormAddContact />\n      <Filter />\n      <ContatList />\n    </div>\n  );\n};\nexport default Contacts;\n"],"names":["useSelector","getEditState","isDublicate","name","contacts","find","contact","toLocaleLowerCase","useState","setName","number","setNumber","isEdit","useGetEdit","useAddContactMutation","addContact","isLoading","error","useFetchContactsQuery","data","handleSubmit","event","preventDefault","alert","handleChange","target","value","className","styles","onSubmit","type","pattern","title","required","disabled","onChange","Loader","originalStatus","getFilter","filter","useFilter","useEdit","dispatch","useDispatch","setFilter","id","useUpdateContactMutation","updateContact","newName","setNewName","newNumber","setNewNumber","values","setEdit","onClick","useDeleteContactMutation","deleteContact","filteredContacts","normalizedFilter","toLowerCase","includes","getFilteredContacts","map"],"sourceRoot":""}