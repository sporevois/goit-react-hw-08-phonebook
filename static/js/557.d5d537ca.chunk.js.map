{"version":3,"file":"static/js/557.d5d537ca.chunk.js","mappings":"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","sources":["redux/contacts/contactsTools.js","webpack://goit-react-hw-08-phonebook/./src/components/FormAddContact/FormAddContact.module.css?3d0a","components/FormAddContact/FormAddContact.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/UpdateForm/UpdateForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const getFilteredContacts = (contacts, filter) => {\n    if (!filter) {\n      return contacts;\n    }\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact => {\n      const normalizedName = contact.name.toLowerCase();\n      const result = normalizedName.includes(normalizedFilter);\n      return result;\n    });\n    return filteredContacts;\n};\n  \nexport const isDublicate = (name, contacts) => {\n     return contacts?.find(\n      contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n    );\n}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FormAddContact_form__IqSWD\",\"title\":\"FormAddContact_title__3XwaF\",\"field\":\"FormAddContact_field__gb4Cc\",\"btn\":\"FormAddContact_btn__P4r9R\"};","import { useState } from 'react';\nimport {\n  useAddContactMutation,\n  useFetchContactsQuery,\n} from 'redux/contacts/contactsApi';\nimport { isDublicate } from 'redux/contacts/contactsTools';\nimport { LoaderRotatingLines } from 'components/Loader/Loader';\nimport styles from '../FormAddContact/FormAddContact.module.css';\n\nconst FormAddContact = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [addContact, { isLoading, error }] = useAddContactMutation();\n  const { data: contacts } = useFetchContactsQuery();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (isDublicate(name, contacts)) {\n      return alert(`${name} is already in contacts.`);\n    }\n    await addContact({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        return;\n    }\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.title}>\n        Name\n        <input\n          className={styles.field}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={styles.title}>\n        Number\n        <input\n          className={styles.field}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button className={styles.btn} type=\"submit\" disabled={isLoading}>\n        {isLoading ? (\n          <span>\n            Adding...\n            <LoaderRotatingLines />\n          </span>\n        ) : (\n          'Add contact'\n        )}\n      </button>\n      {error && <b>Request failed with Error code {error.originalStatus}</b>}\n    </form>\n  );\n};\nexport default FormAddContact;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Filter_title__pSkfx\",\"field\":\"Filter_field__IlYZE\"};","import { setFilter } from 'redux/filter/filterSlice';\nimport { getFilter } from 'redux/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from '../Filter/Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { value } = event.target;\n    const action = setFilter(value);\n    dispatch(action);\n  };\n\n  return (\n    <label className={styles.title}>\n      Find conacts by name\n      <input\n        className={styles.field}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { useState } from 'react';\nimport { setEdit } from 'redux/edit/editSlise';\nimport { useDispatch } from 'react-redux';\nimport { useUpdateContactMutation } from 'redux/contacts/contactsApi';\nimport { LoaderRotatingLines } from 'components/Loader/Loader';\nconst UpdateForm = ({ name, number, id }) => {\n  const [updateContact, { isLoading }] = useUpdateContactMutation();\n  const [newName, setNewName] = useState(`${name}`);\n  const [newNumber, setNewNumber] = useState(`${number}`);\n  const dispatch = useDispatch();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const contact = {\n      id,\n      values: {\n        name: newName,\n        number: newNumber,\n      },\n    };\n\n    await updateContact(contact);\n    // stopEdit();\n    dispatch(setEdit(false));\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'newName':\n        return setNewName(value);\n      case 'newNumber':\n        return setNewNumber(value);\n      default:\n        return;\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"newName\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={newName}\n        onChange={handleChange}\n      />\n      <input\n        type=\"tel\"\n        name=\"newNumber\"\n        value={newNumber}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleChange}\n      />\n      <button type=\"submit\" disabled={name === newName && number === newNumber}>\n        {isLoading ? (\n          <span>\n            <LoaderRotatingLines />\n            Saving...\n          </span>\n        ) : (\n          'Save'\n        )}\n      </button>\n      <button type=\"button\" onClick={() => dispatch(setEdit(false))}>\n        Cancel\n      </button>\n    </form>\n  );\n};\nexport default UpdateForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"ContactItem_btn__1h5dG\",\"item\":\"ContactItem_item__gxreB\"};","// import { useState } from 'react';\nimport { setEdit } from 'redux/edit/editSlise';\nimport { getEditState } from 'redux/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsApi';\nimport UpdateForm from 'components/UpdateForm/UpdateForm';\nimport { LoaderRotatingLines } from 'components/Loader/Loader';\nimport styles from '../ContactItem/ContactItem.module.css';\n\nconst ContactItem = ({ name, number, id }) => {\n  const [deleteContact, { isLoading, error }] = useDeleteContactMutation();\n  // const [isEdit, setIsEdit] = useState(false);\n\n  // const startEdit = () => {\n  //   setIsEdit(true);\n  // };\n  // const stopEdit = () => {\n  //   setIsEdit(false);\n  // };\n  const dispatch = useDispatch();\n  const isEdit = useSelector(getEditState);\n\n  return (\n    <>\n      {error && <b>Request failed with Error code {error.originalStatus}</b>}\n      <li className={styles.item}>\n        {isEdit ? (\n          <UpdateForm name={name} number={number} id={id} />\n        ) : (\n          <span>\n            {name}: {number}\n          </span>\n        )}\n\n        {!isEdit && (\n          <span>\n            <button\n              className={styles.btn}\n              type=\"button\"\n              onClick={() => deleteContact(id)}\n              disabled={isLoading}\n            >\n              {isLoading ? (\n                <span>\n                  Deleting...\n                  <LoaderRotatingLines />\n                </span>\n              ) : (\n                'Delete'\n              )}\n            </button>\n\n            <button\n              className={styles.btn}\n              type=\"button\"\n              // onClick={() => startEdit()}\n              onClick={() => dispatch(setEdit(true))}\n              disabled={isLoading}\n            >\n              Edit\n            </button>\n          </span>\n        )}\n      </li>\n    </>\n  );\n};\nexport default ContactItem;\n","import { getFilter } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\nimport { useFetchContactsQuery } from 'redux/contacts/contactsApi';\nimport { getFilteredContacts } from 'redux/contacts/contactsTools';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport { LoaderThreeDots } from 'components/Loader/Loader';\n\nconst ContatList = () => {\n  const { data: contacts, isLoading, error } = useFetchContactsQuery();\n  const filter = useSelector(getFilter);\n  const filteredContacts = getFilteredContacts(contacts, filter);\n\n  return (\n    <>\n      {isLoading && <LoaderThreeDots />}\n      {error && <b>Request failed with Error code {error.originalStatus}</b>}\n      <ul>\n        {filteredContacts?.map(({ id, name, number }) => (\n          <ContactItem key={id} name={name} number={number} id={id} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContatList;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__WzsIr\"};","import FormAddContact from 'components/FormAddContact/FormAddContact';\nimport Filter from 'components/Filter/Filter';\nimport ContatList from 'components/ContactList/ContactList';\nimport styles from '../Contacts/Contacts.module.css';\n\nconst Contacts = () => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.wrapper}>\n        <h2>Phonebook</h2>\n        <FormAddContact />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContatList />\n      </div>\n    </div>\n  );\n};\nexport default Contacts;\n"],"names":["isDublicate","name","contacts","find","contact","toLocaleLowerCase","useState","setName","number","setNumber","useAddContactMutation","addContact","isLoading","error","useFetchContactsQuery","data","handleSubmit","event","preventDefault","alert","handleChange","target","value","className","styles","onSubmit","type","pattern","title","required","onChange","disabled","Loader","originalStatus","filter","useSelector","getFilter","dispatch","useDispatch","action","setFilter","id","useUpdateContactMutation","updateContact","newName","setNewName","newNumber","setNewNumber","values","setEdit","onClick","useDeleteContactMutation","deleteContact","isEdit","getEditState","filteredContacts","normalizedFilter","toLowerCase","includes","getFilteredContacts","map"],"sourceRoot":""}